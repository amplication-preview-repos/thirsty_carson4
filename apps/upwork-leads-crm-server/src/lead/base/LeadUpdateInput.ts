/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsEnum,
  IsNumber,
  Min,
  Max,
  IsInt,
  ValidateNested,
} from "class-validator";

import { EnumLeadPriority } from "./EnumLeadPriority";
import { CommentUpdateManyWithoutLeadsInput } from "./CommentUpdateManyWithoutLeadsInput";
import { Type } from "class-transformer";
import { TaskUpdateManyWithoutLeadsInput } from "./TaskUpdateManyWithoutLeadsInput";

@InputType()
class LeadUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  company?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  upworkProfile?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumLeadPriority,
  })
  @IsEnum(EnumLeadPriority)
  @IsOptional()
  @Field(() => EnumLeadPriority, {
    nullable: true,
  })
  priority?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  projectCost?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  estimateInHours?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  briefDescription?: string | null;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutLeadsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutLeadsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutLeadsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutLeadsInput;

  @ApiProperty({
    required: false,
    type: () => TaskUpdateManyWithoutLeadsInput,
  })
  @ValidateNested()
  @Type(() => TaskUpdateManyWithoutLeadsInput)
  @IsOptional()
  @Field(() => TaskUpdateManyWithoutLeadsInput, {
    nullable: true,
  })
  tasks?: TaskUpdateManyWithoutLeadsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  responsibleUser?: string | null;
}

export { LeadUpdateInput as LeadUpdateInput };
