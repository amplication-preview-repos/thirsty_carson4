/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Stage as PrismaStage } from "@prisma/client";

export class StageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StageCountArgs, "select">): Promise<number> {
    return this.prisma.stage.count(args);
  }

  async stages(args: Prisma.StageFindManyArgs): Promise<PrismaStage[]> {
    return this.prisma.stage.findMany(args);
  }
  async stage(args: Prisma.StageFindUniqueArgs): Promise<PrismaStage | null> {
    return this.prisma.stage.findUnique(args);
  }
  async createStage(args: Prisma.StageCreateArgs): Promise<PrismaStage> {
    return this.prisma.stage.create(args);
  }
  async updateStage(args: Prisma.StageUpdateArgs): Promise<PrismaStage> {
    return this.prisma.stage.update(args);
  }
  async deleteStage(args: Prisma.StageDeleteArgs): Promise<PrismaStage> {
    return this.prisma.stage.delete(args);
  }
}
